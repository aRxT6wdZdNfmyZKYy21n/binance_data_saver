---
alwaysApply: true
---

Правила:
- Следует избегать .get при работе со словарями, когда можно использовать прямое обращение \_\_getitem\_\_ []. Это сделано для того, чтобы поймать явную ошибку в неожиданном случае отсутствия ключа, чем пытаться хоть как-то работать в неожиданных ситуациях.
- Обработка исключений:
- - Как лучше не обрабатывать исключения:
```python
try:
    ...
except Exception as e:
    print(f'Handled exception: {e}')
```
- - Вместо этого лучше использовать конструкцию:

```python
import logging
import traceback

logger = logging.getLogger(
    __name__,
)

...

try:
    ...
except Exception as exception:
    logger.error(f'Handled exception: {"".join(traceback.format_exception(exception))}')
```
- В ситуациях неопределённости лучше задавать вопросыПравила:
- Следует избегать .get при работе со словарями, когда можно использовать прямое обращение \_\_getitem\_\_ []. Это сделано для того, чтобы поймать явную ошибку в неожиданном случае отсутствия ключа, чем пытаться хоть как-то работать в неожиданных ситуациях.
- Обработка исключений:
- - Как лучше не обрабатывать исключения:
```python
try:
    ...
except Exception as e:
    print(f'Handled exception: {e}')
```
- - Вместо этого лучше использовать конструкцию:

```python
import logging
import traceback

logger = logging.getLogger(
    __name__,
)

...

try:
    ...
except Exception as exception:
    logger.error(f'Handled exception: {"".join(traceback.format_exception(exception))}')
```
- В ситуациях неопределённости лучше задавать вопросы